{"mappings":"C,A,W,S,E,C,C,C,C,C,C,C,E,O,c,C,E,E,C,I,E,I,E,W,C,E,a,C,C,E,C,I,E,A,C,A,a,O,W,W,A,a,O,K,K,A,a,O,O,O,A,a,O,O,O,C,C,E,iB,C,A,C,E,E,Q,A,E,Q,S,C,C,C,E,O,c,C,E,O,C,a,C,M,C,E,a,C,C,G,E,E,O,C,a,W,O,C,G,E,E,O,C,e,W,O,C,G,E,E,O,C,U,W,O,C,GCAA,IAAA,EAAA,EAAA,S,E,E,S,E,E,S,E,E,S,E,E,S,E,E,S,E,E,S,E,E,S,E,E,SAIQ,EAAe,AAAA,A,E,SAAA,MAAK,CAApB,UAAR,CAEM,EAAN,W,aAAM,SAAA,EAKS,CAAM,CAAE,CAAS,EAL1B,AAAA,CAAA,EAAA,EAAA,CAAA,AAAA,EAAA,IAAA,CAAA,GAMF,IAAI,CAAC,MAAM,CAAG,EACd,IAAI,CAAC,SAAS,CAAG,C,CAPf,MAAA,AAAA,CAAA,EAAA,EAAA,CAAA,AAAA,EAAA,EAAA,C,CAaE,IAAA,QAAN,MAAA,SAAa,CAAK,E,M,A,C,E,E,C,A,E,W,I,E,M,A,C,E,E,W,A,E,I,C,S,C,E,O,E,K,E,K,EACZ,G,E,I,CAAA,AAAA,CAAA,AAAO,KAAA,IAAA,EAAA,YAAP,AAAA,CAAA,EAAA,EAAA,CAAW,AAAX,EAAO,EAAA,IAAU,SAAjB,MAAA,C,E,E,CACE,GAAA,AAAe,UAAf,EAAM,IAAI,CAAV,MAAA,C,E,E,CACE,GAAA,CAAA,CAAA,OAAO,SAAS,CAAC,EAAM,QAAQ,GAAK,EAAM,QAAQ,EAAI,CAAA,IACxD,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,EAAM,QAAQ,EAC3B,IAAI,CAAC,MAAM,CAAC,QAAQ,GAAK,EAAM,QAAQ,EAFzC,MAAA,C,E,E,CAGA,MAAA,C,EAAM,IAAI,QAAQ,SAAC,CAAA,CAAS,CAAtB,EACJ,EAAK,MAAM,CAAC,UAAU,CAAG,EACzB,EAAK,MAAM,CAAC,OAAO,CAAG,EACtB,EAAK,MAAM,CAAC,QAAQ,CAAC,EAAM,QAAQ,CACrC,G,A,M,EAJA,EAAA,IAAA,GAKA,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,EAAM,QAAQ,E,E,K,C,C,M,EAGn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","sources":["<anon>","node_modules/.pnpm/native-file-system-adapter@3.0.1/node_modules/native-file-system-adapter/src/adapters/sandbox.js"],"sourcesContent":["(function () {\n\nfunction $parcel$defineInteropFlag(a) {\n  Object.defineProperty(a, '__esModule', {value: true, configurable: true});\n}\n\nfunction $parcel$export(e, n, v, s) {\n  Object.defineProperty(e, n, {get: v, set: s, enumerable: true, configurable: true});\n}\n\n      var $parcel$global =\n        typeof globalThis !== 'undefined'\n          ? globalThis\n          : typeof self !== 'undefined'\n          ? self\n          : typeof window !== 'undefined'\n          ? window\n          : typeof global !== 'undefined'\n          ? global\n          : {};\n  var parcelRequire = $parcel$global[\"parcelRequiref23a\"];\nvar parcelRegister = parcelRequire.register;\nparcelRegister(\"hByxG\", function(module, exports) {\n\n$parcel$defineInteropFlag(module.exports);\n\n$parcel$export(module.exports, \"FileHandle\", function () { return $cd10afb89b033528$export$8bdd21c705ef8d22; });\n$parcel$export(module.exports, \"FolderHandle\", function () { return $cd10afb89b033528$export$61db58e71d795906; });\n$parcel$export(module.exports, \"default\", function () { return $cd10afb89b033528$export$2e2bcd8739ae039; });\n/* global Blob, DOMException */ \nvar $hVBqc = parcelRequire(\"hVBqc\");\n\nvar $hW8ac = parcelRequire(\"hW8ac\");\n\nvar $7lhcp = parcelRequire(\"7lhcp\");\n\nvar $5LayG = parcelRequire(\"5LayG\");\n\nvar $8BtP9 = parcelRequire(\"8BtP9\");\n\nvar $fsSDT = parcelRequire(\"fsSDT\");\n\nvar $5f0Cq = parcelRequire(\"5f0Cq\");\n\nvar $2wBSb = parcelRequire(\"2wBSb\");\n\nvar $Csf8W = parcelRequire(\"Csf8W\");\n\nvar $2taKJ = parcelRequire(\"2taKJ\");\nvar $cd10afb89b033528$var$DISALLOWED = (0, $2taKJ.errors).DISALLOWED;\nvar $cd10afb89b033528$var$Sink = /*#__PURE__*/ function() {\n    \"use strict\";\n    function Sink(writer, fileEntry) {\n        (0, $7lhcp._)(this, Sink);\n        this.writer = writer;\n        this.fileEntry = fileEntry;\n    }\n    (0, $8BtP9._)(Sink, [\n        {\n            key: \"write\",\n            value: /**\n   * @param {BlobPart | Object} chunk\n   */ function write(chunk) {\n                return (/*#__PURE__*/ 0, /*#__PURE__*/ $hVBqc._)(function() {\n                    var _this;\n                    return (0, $Csf8W.__generator)(this, function(_state) {\n                        switch(_state.label){\n                            case 0:\n                                _this = this;\n                                if (!((typeof chunk === \"undefined\" ? \"undefined\" : (0, $5f0Cq._)(chunk)) === 'object')) return [\n                                    3,\n                                    4\n                                ];\n                                if (!(chunk.type === 'write')) return [\n                                    3,\n                                    3\n                                ];\n                                if (!(Number.isInteger(chunk.position) && chunk.position >= 0)) return [\n                                    3,\n                                    2\n                                ];\n                                this.writer.seek(chunk.position);\n                                if (!(this.writer.position !== chunk.position)) return [\n                                    3,\n                                    2\n                                ];\n                                return [\n                                    4,\n                                    new Promise(function(resolve, reject) {\n                                        _this.writer.onwriteend = resolve;\n                                        _this.writer.onerror = reject;\n                                        _this.writer.truncate(chunk.position);\n                                    })\n                                ];\n                            case 1:\n                                _state.sent();\n                                this.writer.seek(chunk.position);\n                                _state.label = 2;\n                            case 2:\n                                if (!('data' in chunk)) throw new DOMException('Failed to execute \\'write\\' on \\'UnderlyingSinkBase\\': Invalid params passed. write requires a data argument', 'SyntaxError');\n                                chunk = chunk.data;\n                                return [\n                                    3,\n                                    4\n                                ];\n                            case 3:\n                                if (chunk.type === 'seek') {\n                                    if (Number.isInteger(chunk.position) && chunk.position >= 0) {\n                                        this.writer.seek(chunk.position);\n                                        if (this.writer.position !== chunk.position) throw new DOMException('seeking position failed', 'InvalidStateError');\n                                        return [\n                                            2\n                                        ];\n                                    } else throw new DOMException('Failed to execute \\'write\\' on \\'UnderlyingSinkBase\\': Invalid params passed. seek requires a position argument', 'SyntaxError');\n                                } else if (chunk.type === 'truncate') return [\n                                    2,\n                                    new Promise(function(resolve) {\n                                        if (Number.isInteger(chunk.size) && chunk.size >= 0) {\n                                            _this.writer.onwriteend = function(evt) {\n                                                return resolve();\n                                            };\n                                            _this.writer.truncate(chunk.size);\n                                        } else throw new DOMException('Failed to execute \\'write\\' on \\'UnderlyingSinkBase\\': Invalid params passed. truncate requires a size argument', 'SyntaxError');\n                                    })\n                                ];\n                                _state.label = 4;\n                            case 4:\n                                return [\n                                    4,\n                                    new Promise(function(resolve, reject) {\n                                        _this.writer.onwriteend = resolve;\n                                        _this.writer.onerror = reject;\n                                        _this.writer.write(new Blob([\n                                            chunk\n                                        ]));\n                                    })\n                                ];\n                            case 5:\n                                _state.sent();\n                                return [\n                                    2\n                                ];\n                        }\n                    });\n                }).call(this);\n            }\n        },\n        {\n            key: \"close\",\n            value: function close() {\n                return new Promise(this.fileEntry.file.bind(this.fileEntry));\n            }\n        }\n    ]);\n    return Sink;\n}();\nvar $cd10afb89b033528$export$8bdd21c705ef8d22 = /*#__PURE__*/ function() {\n    \"use strict\";\n    function FileHandle(file) {\n        var writable = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : true;\n        (0, $7lhcp._)(this, FileHandle);\n        this.file = file;\n        this.kind = 'file';\n        this.writable = writable;\n        this.readable = true;\n    }\n    (0, $8BtP9._)(FileHandle, [\n        {\n            key: \"name\",\n            get: function get() {\n                return this.file.name;\n            }\n        },\n        {\n            /**\n   * @param {{ file: { toURL: () => string; }; }} other\n   */ key: \"isSameEntry\",\n            value: function isSameEntry(other) {\n                return this.file.toURL() === other.file.toURL();\n            }\n        },\n        {\n            /** @return {Promise<File>} */ key: \"getFile\",\n            value: function getFile() {\n                return new Promise(this.file.file.bind(this.file));\n            }\n        },\n        {\n            /** @return {Promise<Sink>} */ key: \"createWritable\",\n            value: function createWritable(opts) {\n                var _this = this;\n                if (!this.writable) throw (0, $5LayG._)(DOMException, (0, $fsSDT._)($cd10afb89b033528$var$DISALLOWED));\n                return new Promise(function(resolve, reject) {\n                    return _this.file.createWriter(function(fileWriter) {\n                        if (opts.keepExistingData === false) {\n                            fileWriter.onwriteend = function(evt) {\n                                return resolve(new $cd10afb89b033528$var$Sink(fileWriter, _this.file));\n                            };\n                            fileWriter.truncate(0);\n                        } else resolve(new $cd10afb89b033528$var$Sink(fileWriter, _this.file));\n                    }, reject);\n                });\n            }\n        }\n    ]);\n    return FileHandle;\n}();\nvar $cd10afb89b033528$export$61db58e71d795906 = /*#__PURE__*/ function() {\n    \"use strict\";\n    function FolderHandle(dir) {\n        var writable = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : true;\n        (0, $7lhcp._)(this, FolderHandle);\n        this.dir = dir;\n        this.writable = writable;\n        this.readable = true;\n        this.kind = 'directory';\n        this.name = dir.name;\n    }\n    (0, $8BtP9._)(FolderHandle, [\n        {\n            /** @param {FolderHandle} other */ key: \"isSameEntry\",\n            value: function isSameEntry(other) {\n                return this.dir.fullPath === other.dir.fullPath;\n            }\n        },\n        {\n            key: \"entries\",\n            value: /** @returns {AsyncGenerator<[string, FileHandle | FolderHandle]>} */ function entries() {\n                return (/*#__PURE__*/ 0, /*#__PURE__*/ $2wBSb._)(function() {\n                    var reader, entries, _iteratorNormalCompletion, _didIteratorError, _iteratorError, _iterator, _step, x, err;\n                    return (0, $Csf8W.__generator)(this, function(_state) {\n                        switch(_state.label){\n                            case 0:\n                                reader = this.dir.createReader();\n                                return [\n                                    4,\n                                    (0, $hW8ac._)(new Promise(reader.readEntries.bind(reader)))\n                                ];\n                            case 1:\n                                entries = _state.sent();\n                                _iteratorNormalCompletion = true, _didIteratorError = false, _iteratorError = undefined;\n                                _state.label = 2;\n                            case 2:\n                                _state.trys.push([\n                                    2,\n                                    7,\n                                    8,\n                                    9\n                                ]);\n                                _iterator = entries[Symbol.iterator]();\n                                _state.label = 3;\n                            case 3:\n                                if (!!(_iteratorNormalCompletion = (_step = _iterator.next()).done)) return [\n                                    3,\n                                    6\n                                ];\n                                x = _step.value;\n                                return [\n                                    4,\n                                    [\n                                        x.name,\n                                        x.isFile ? new $cd10afb89b033528$export$8bdd21c705ef8d22(x, this.writable) : new FolderHandle(x, this.writable)\n                                    ]\n                                ];\n                            case 4:\n                                _state.sent();\n                                _state.label = 5;\n                            case 5:\n                                _iteratorNormalCompletion = true;\n                                return [\n                                    3,\n                                    3\n                                ];\n                            case 6:\n                                return [\n                                    3,\n                                    9\n                                ];\n                            case 7:\n                                err = _state.sent();\n                                _didIteratorError = true;\n                                _iteratorError = err;\n                                return [\n                                    3,\n                                    9\n                                ];\n                            case 8:\n                                try {\n                                    if (!_iteratorNormalCompletion && _iterator.return != null) {\n                                        _iterator.return();\n                                    }\n                                } finally{\n                                    if (_didIteratorError) {\n                                        throw _iteratorError;\n                                    }\n                                }\n                                return [\n                                    7\n                                ];\n                            case 9:\n                                return [\n                                    2\n                                ];\n                        }\n                    });\n                }).call(this);\n            }\n        },\n        {\n            /**\n   * @param {string} name\n   * @param {{ create: boolean; }} opts\n   * @returns {Promise<FolderHandle>}\n   */ key: \"getDirectoryHandle\",\n            value: function getDirectoryHandle(name, opts) {\n                var _this = this;\n                return new Promise(function(resolve, reject) {\n                    _this.dir.getDirectory(name, opts, function(dir) {\n                        resolve(new FolderHandle(dir));\n                    }, reject);\n                });\n            }\n        },\n        {\n            /**\n   * @param {string} name\n   * @param {{ create: boolean; }} opts\n   * @returns {Promise<FileHandle>}\n   */ key: \"getFileHandle\",\n            value: function getFileHandle(name, opts) {\n                var _this = this;\n                return new Promise(function(resolve, reject) {\n                    return _this.dir.getFile(name, opts, function(file) {\n                        return resolve(new $cd10afb89b033528$export$8bdd21c705ef8d22(file));\n                    }, reject);\n                });\n            }\n        },\n        {\n            key: \"removeEntry\",\n            value: /**\n   * @param {string} name\n   * @param {{ recursive: boolean; }} opts\n   */ function removeEntry(name, opts) {\n                return (/*#__PURE__*/ 0, /*#__PURE__*/ $hVBqc._)(function() {\n                    var _this, entry;\n                    return (0, $Csf8W.__generator)(this, function(_state) {\n                        switch(_state.label){\n                            case 0:\n                                _this = this;\n                                return [\n                                    4,\n                                    this.getDirectoryHandle(name, {\n                                        create: false\n                                    }).catch(function(err) {\n                                        return err.name === 'TypeMismatchError' ? _this.getFileHandle(name, {\n                                            create: false\n                                        }) : err;\n                                    })\n                                ];\n                            case 1:\n                                entry = _state.sent();\n                                if (entry instanceof Error) throw entry;\n                                return [\n                                    2,\n                                    new Promise(function(resolve, reject) {\n                                        if (entry instanceof FolderHandle) opts.recursive ? entry.dir.removeRecursively(function() {\n                                            return resolve();\n                                        }, reject) : entry.dir.remove(function() {\n                                            return resolve();\n                                        }, reject);\n                                        else if (entry.file) entry.file.remove(function() {\n                                            return resolve();\n                                        }, reject);\n                                    })\n                                ];\n                        }\n                    });\n                }).call(this);\n            }\n        }\n    ]);\n    return FolderHandle;\n}();\nvar $cd10afb89b033528$export$2e2bcd8739ae039 = function() {\n    var opts = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};\n    return new Promise(function(resolve, reject) {\n        return window.webkitRequestFileSystem(opts._persistent, 0, function(e) {\n            return resolve(new $cd10afb89b033528$export$61db58e71d795906(e.root));\n        }, reject);\n    });\n};\n\n});\n\n})();\n//# sourceMappingURL=sandbox.f230f034.js.map\n","/* global Blob, DOMException */\n\nimport { errors } from '../util.js'\n\nconst { DISALLOWED } = errors\n\nclass Sink {\n  /**\n   * @param {FileWriter} writer\n   * @param {FileEntry} fileEntry\n   */\n  constructor (writer, fileEntry) {\n    this.writer = writer\n    this.fileEntry = fileEntry\n  }\n\n  /**\n   * @param {BlobPart | Object} chunk\n   */\n  async write (chunk) {\n    if (typeof chunk === 'object') {\n      if (chunk.type === 'write') {\n        if (Number.isInteger(chunk.position) && chunk.position >= 0) {\n          this.writer.seek(chunk.position)\n          if (this.writer.position !== chunk.position) {\n            await new Promise((resolve, reject) => {\n              this.writer.onwriteend = resolve\n              this.writer.onerror = reject\n              this.writer.truncate(chunk.position)\n            })\n            this.writer.seek(chunk.position)\n          }\n        }\n        if (!('data' in chunk)) {\n          throw new DOMException('Failed to execute \\'write\\' on \\'UnderlyingSinkBase\\': Invalid params passed. write requires a data argument', 'SyntaxError')\n        }\n        chunk = chunk.data\n      } else if (chunk.type === 'seek') {\n        if (Number.isInteger(chunk.position) && chunk.position >= 0) {\n          this.writer.seek(chunk.position)\n          if (this.writer.position !== chunk.position) {\n            throw new DOMException('seeking position failed', 'InvalidStateError')\n          }\n          return\n        } else {\n          throw new DOMException('Failed to execute \\'write\\' on \\'UnderlyingSinkBase\\': Invalid params passed. seek requires a position argument', 'SyntaxError')\n        }\n      } else if (chunk.type === 'truncate') {\n        return new Promise(resolve => {\n          if (Number.isInteger(chunk.size) && chunk.size >= 0) {\n            this.writer.onwriteend = evt => resolve()\n            this.writer.truncate(chunk.size)\n          } else {\n            throw new DOMException('Failed to execute \\'write\\' on \\'UnderlyingSinkBase\\': Invalid params passed. truncate requires a size argument', 'SyntaxError')\n          }\n        })\n      }\n    }\n    await new Promise((resolve, reject) => {\n      this.writer.onwriteend = resolve\n      this.writer.onerror = reject\n      this.writer.write(new Blob([chunk]))\n    })\n  }\n\n  close () {\n    return new Promise(this.fileEntry.file.bind(this.fileEntry))\n  }\n}\n\nexport class FileHandle {\n  /** @param {FileEntry} file */\n  constructor (file, writable = true) {\n    this.file = file\n    this.kind = 'file'\n    this.writable = writable\n    this.readable = true\n  }\n\n  get name () {\n    return this.file.name\n  }\n\n  /**\n   * @param {{ file: { toURL: () => string; }; }} other\n   */\n  isSameEntry (other) {\n    return this.file.toURL() === other.file.toURL()\n  }\n\n  /** @return {Promise<File>} */\n  getFile () {\n    return new Promise(this.file.file.bind(this.file))\n  }\n\n  /** @return {Promise<Sink>} */\n  createWritable (opts) {\n    if (!this.writable) throw new DOMException(...DISALLOWED)\n\n    return new Promise((resolve, reject) =>\n      this.file.createWriter(fileWriter => {\n        if (opts.keepExistingData === false) {\n          fileWriter.onwriteend = evt => resolve(new Sink(fileWriter, this.file))\n          fileWriter.truncate(0)\n        } else {\n          resolve(new Sink(fileWriter, this.file))\n        }\n      }, reject)\n    )\n  }\n}\n\nexport class FolderHandle {\n  /** @param {DirectoryEntry} dir */\n  constructor (dir, writable = true) {\n    this.dir = dir\n    this.writable = writable\n    this.readable = true\n    this.kind = 'directory'\n    this.name = dir.name\n  }\n\n  /** @param {FolderHandle} other */\n  isSameEntry (other) {\n    return this.dir.fullPath === other.dir.fullPath\n  }\n\n  /** @returns {AsyncGenerator<[string, FileHandle | FolderHandle]>} */\n  async * entries () {\n    const reader = this.dir.createReader()\n    const entries = await new Promise(reader.readEntries.bind(reader))\n    for (const x of entries) {\n      yield [x.name, x.isFile ? new FileHandle(x, this.writable) : new FolderHandle(x, this.writable)]\n    }\n  }\n\n  /**\n   * @param {string} name\n   * @param {{ create: boolean; }} opts\n   * @returns {Promise<FolderHandle>}\n   */\n  getDirectoryHandle (name, opts) {\n    return new Promise((resolve, reject) => {\n      this.dir.getDirectory(name, opts, dir => {\n        resolve(new FolderHandle(dir))\n      }, reject)\n    })\n  }\n\n  /**\n   * @param {string} name\n   * @param {{ create: boolean; }} opts\n   * @returns {Promise<FileHandle>}\n   */\n  getFileHandle (name, opts) {\n    return new Promise((resolve, reject) =>\n      this.dir.getFile(name, opts, file => resolve(new FileHandle(file)), reject)\n    )\n  }\n\n  /**\n   * @param {string} name\n   * @param {{ recursive: boolean; }} opts\n   */\n  async removeEntry (name, opts) {\n    /** @type {Error|FolderHandle|FileHandle} */\n    const entry = await this.getDirectoryHandle(name, { create: false }).catch(err =>\n      err.name === 'TypeMismatchError' ? this.getFileHandle(name, { create: false }) : err\n    )\n\n    if (entry instanceof Error) throw entry\n\n    return new Promise((resolve, reject) => {\n      if (entry instanceof FolderHandle) {\n        opts.recursive\n          ? entry.dir.removeRecursively(() => resolve(), reject)\n          : entry.dir.remove(() => resolve(), reject)\n      } else if (entry.file) {\n        entry.file.remove(() => resolve(), reject)\n      }\n    })\n  }\n}\n\nexport default (opts = {}) => new Promise((resolve, reject) =>\n  window.webkitRequestFileSystem(\n    opts._persistent, 0,\n    e => resolve(new FolderHandle(e.root)),\n    reject\n  )\n)\n"],"names":["$parcel$export","e","n","v","s","Object","defineProperty","get","set","enumerable","configurable","parcelRequire","$parcel$global","globalThis","self","window","global","parcelRegister","register","module","exports","value","$cd10afb89b033528$export$8bdd21c705ef8d22","$cd10afb89b033528$export$61db58e71d795906","$cd10afb89b033528$export$2e2bcd8739ae039","$hVBqc","$hW8ac","$7lhcp","$5LayG","$8BtP9","$fsSDT","$5f0Cq","$2wBSb","$Csf8W","$cd10afb89b033528$var$DISALLOWED","$2taKJ","errors","DISALLOWED","$cd10afb89b033528$var$Sink","Sink","writer","fileEntry","_","key","chunk","_this","__generator","_state","label","type","Number","isInteger","position","seek","Promise","resolve","reject","onwriteend","onerror","truncate","sent","DOMException","data","size","evt","write","Blob","call","file","bind","FileHandle","writable","arguments","length","kind","readable","name","other","toURL","opts","createWriter","fileWriter","keepExistingData","FolderHandle","dir","fullPath","reader","entries","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_iterator","_step","x","err","createReader","readEntries","undefined","trys","push","Symbol","iterator","next","done","isFile","return","getDirectory","getFile","entry","getDirectoryHandle","create","catch","getFileHandle","Error","recursive","removeRecursively","remove","webkitRequestFileSystem","_persistent","root"],"version":3,"file":"sandbox.f230f034.js.map"}